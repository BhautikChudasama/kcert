---
name: Build KCert
on:
  push:
    branches:
    - '**'
    tags:
    - '**'

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      IS_MAIN: ${{github.GITHUB_REF_NAME == 'main'}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Extract metadata (tags, labels) for GHCR
        id: meta_ghcr
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/nabsul/kcert
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=sha

      - name: Log in to the GHCR registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io/nabsul/kcert
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push GHCR image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ env.IS_MAIN }}
          tags: ${{ steps.meta_ghcr.outputs.tags }}
          labels: ${{ steps.meta_ghcr.outputs.labels }}

      - name: Extract metadata (tags, labels) for Docker
        if: startsWith(github.ref, 'refs/tags/v')
        id: meta_docker
        uses: docker/metadata-action@v3
        with:
          images: nabsul/kcert
          tags: |
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}

      - name: Login to Docker Hub
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker Hub image
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ env.IS_MAIN }}
          tags: ${{ steps.meta_docker.outputs.tags }}
          labels: ${{ steps.meta_docker.outputs.labels }}
