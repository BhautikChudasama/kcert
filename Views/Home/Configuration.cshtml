@model KCertParams
@{ 
    ViewData["Title"] = "Configuration";

    var directories = new List<SelectListItem>
        {
        new SelectListItem{ Value = "https://acme-staging-v02.api.letsencrypt.org/directory", Text = "Staging"},
        new SelectListItem{ Value = "https://acme-v02.api.letsencrypt.org/directory", Text = "Production"},
    };

    var regions = Amazon.RegionEndpoint.EnumerableAllRegions
        .Select(r => new SelectListItem { Value = r.SystemName, Text = r.DisplayName })
        .ToList();
}

<h2>KCert Configuration Settings</h2>

@if (!string.IsNullOrWhiteSpace(Model.AwsKey))
{
    <p><a class="btn btn-info" asp-route-sendEmail="true">Send Test Email</a></p>
}

<form method="post" asp-action="SaveConfig">
    <div class="form-group">
        <label for="AcmeDir">ACME Directory URL</label>
        <select id="AcmeDir" name="AcmeDir" class="form-control" asp-for="AcmeDirUrl" asp-items="directories"></select>
        <small id="AcmeDirHelp" class="form-text text-muted">The mail URL for the ACME server.</small>
    </div>
    <div class="form-group">
        <label for="AcmeEmail">ACME Account Email Address</label>
        <input asp-for="AcmeEmail" type="email" class="form-control" id="AcmeEmail" name="AcmeEmail" aria-describedby="AcmeEmailHelp">
        <small id="AcmeEmailHelp" class="form-text text-muted">Email address to use for account.</small>
    </div>
    <div class="form-group">
        <label for="AcmeKey">ACME Key</label>
        <input id="AcmeKeyField" asp-for="AcmeKey" type="text" class="form-control" aria-describedby="AcmeKeyHelp" value="******">
        <small id="AcmeKeyHelp" class="form-text text-muted">Account RSA Key. Leave empty to generate a new one. <a href="#" onclick="showKey()">show</a></small>
    </div>
    <div class="form-group form-check">
        <input asp-for="TermsAccepted" type="checkbox" class="form-check-input" id="TermsAccepted" name="TermsAccepted">
        <label class="form-check-label" for="TermsAccepted">Accept ACME Terms</label>
    </div>
    <div>
        <button type="submit" class="btn btn-primary">Save</button>
    </div>

    <hr />
    <h4>AWS Email Settings <small>(optional)</small></h4>

    <div class="form-group">
        <label for="AwsRegion">AWS Region</label>
        <select id="AwsRegion" name="AwsRegion" class="form-control" asp-for="AwsRegion" asp-items="regions"></select>
        <small id="AcmeDirHelp" class="form-text text-muted">The mail URL for the ACME server.</small>
    </div>
    <div class="form-group">
        <label for="AwsKey">AWS Key</label>
        <input asp-for="AwsKey" type="text" class="form-control" id="AwsKey" name="AwsKey" aria-describedby="AwsKeyHelp">
        <small id="AwsKeyHelp" class="form-text text-muted">AWS Key for sending emails.</small>
    </div>
    <div class="form-group">
        <label for="SendGridKey">AWS Key</label>
        <input asp-for="AwsSecret" type="text" class="form-control" id="AwsSecret" name="AwsSecret" aria-describedby="AwsSecretHelp">
        <small id="AwsSecretHelp" class="form-text text-muted">AWS Secret for .</small>
    </div>
    <div class="form-group">
        <label for="EmailFrom">From Address</label>
        <input asp-for="EmailFrom" type="email" class="form-control" id="EmailFrom" name="EmailFrom" aria-describedby="EmailFromHelp">
        <small id="EmailFromHelp" class="form-text text-muted">The email address from which emails are coming from.</small>
    </div>
    <div>
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="submit" class="btn btn-warning">Send Test Email</button>
    </div>
</form>

@section Scripts {
<script>
    const configState = {
        key: {
            show: false,
            value: "@Model.AcmeKey",
        },
    }

    const showKey = () => {
        const cfg = configState.key
        const el = document.getElementById('AcmeKeyField')
        el.value = cfg.show ? '******' : configState.key.value
        cfg.show = !cfg.show
    }
</script>
}