@inject K8sClient _kube;
@model Networkingv1beta1Ingress
@{
    var ingress = Model;
    var secret = await _kube.GetSecretAsync(ingress.Namespace(), ingress.SecretName());
    var cert = secret?.Cert();
    ViewData["Title"] = $"Ingress - {Model.Namespace()} / {Model.Name()}";
}

<h1>Ingress: @ingress.Namespace() / @ingress.Name()</h1>

<p>
    <a class="btn btn-success" asp-action="Renew" asp-route-ns="@ingress.Namespace()" asp-route-name="@ingress.Name()">Fetch new Cert</a>
</p>

<p>
    <table class="table">
        <thead></thead>
        <tbody>
            <tr>
                <th scope="row">Secret Name</th>
                <td>@secret?.Name()</td>
            </tr>
            <tr>
                <th scope="row">Created</th>
                <td>@cert?.NotBefore.ToString("s")</td>
            </tr>
            <tr>
                <th scope="row">Expiration</th>
                <td>@cert?.NotAfter.ToString("s")</td>
            </tr>
        </tbody>
    </table>
</p>

<h2>Spec</h2>

<pre>@JsonSerializer.Serialize(ingress.Spec, new JsonSerializerOptions { WriteIndented = true })</pre>
